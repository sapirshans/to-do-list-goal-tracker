{"version":3,"sources":["components/task.js","components/taskinput.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","handleDelete","e","id","state","buttonHover","taskHover","isCompleted","toggleButtonHover","bind","toggleTaskHover","handleClick","this","setState","togglestyle","marginLeft","cursor","pstyle","textDecoration","margin","color","style","fontFamily","display","padding","flexFlow","justifyContent","alignItems","fontSize","onMouseEnter","onMouseLeave","task","width","height","onClick","cx","cy","r","fill","x1","x2","y1","y2","stroke","strokeWidth","className","Component","TaskInput","handleSubmit","preventDefault","value","handleInput","target","onSubmit","type","placeholder","onChange","border","borderBottom","App","React","useState","tasks","setTasks","removeTask","newtasks","splice","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37ef3ef7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Task extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { buttonHover: false, taskHover: false, isCompleted: false };\n    this.toggleButtonHover = this.toggleButtonHover.bind(this);\n    this.toggleTaskHover = this.toggleTaskHover.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  toggleButtonHover() {\n    this.setState({ buttonHover: !this.state.buttonHover });\n  }\n\n  toggleTaskHover() {\n    this.setState({ taskHover: !this.state.taskHover });\n  }\n\n  handleClick() {\n    this.setState({ isCompleted: !this.state.isCompleted });\n  }\n\n  handleDelete = (e) => {\n    this.props.handleDelete(this.props.id);\n  };\n\n  render() {\n    const taskstyle = {\n      fontFamily: \"Verdana\",\n      display: \"flex\",\n      padding: \"10px\",\n      flexFlow: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontSize: \"24px\",\n    };\n    const togglestyle = {\n      marginLeft: \"10px\",\n      cursor: \"pointer\",\n    };\n\n    // Default styling for Task\n    var pstyle = { textDecoration: \"none\", margin: \"0px\" };\n\n    // Styling on button hover\n    if (this.state.buttonHover) {\n      pstyle = { textDecoration: \"line-through\", margin: \"0px\" };\n    }\n\n    // Styling on button click\n    if (this.state.isCompleted) {\n      pstyle = { textDecoration: \"linethrough\", color: \"gray\", margin: \"0px\" };\n    }\n\n    // Styling on task hover????\n    if (this.state.taskHover) {\n      pstyle = { textDecoration: \"underline\", margin: \"0px\" };\n    }\n\n    return (\n      <div id=\"task\" style={taskstyle}>\n        <p\n          style={pstyle}\n          onMouseEnter={this.toggleTaskHover}\n          onMouseLeave={this.toggleTaskHover}\n        >\n          {this.props.task}\n        </p>\n        <svg\n          width=\"20px\"\n          height=\"20px\"\n          style={togglestyle}\n          onMouseEnter={this.toggleButtonHover}\n          onMouseLeave={this.toggleButtonHover}\n          onClick={this.handleClick}\n        >\n          <circle cx=\"10\" cy=\"10\" r=\"10px\" fill=\"gray\"></circle>\n          <line\n            x1=\"5\"\n            x2=\"15\"\n            y1=\"10\"\n            y2=\"10\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n          ></line>\n        </svg>\n        <svg\n          width=\"20px\"\n          height=\"20px\"\n          className=\"delete-task\"\n          onClick={this.handleDelete}\n          style={togglestyle}\n        >\n          <circle cx=\"10\" cy=\"10\" r=\"10px\" fill=\"red\"></circle>\n        </svg>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TaskInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state.value);\n    this.setState({ value: \"\" });\n  };\n\n  handleInput = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  render() {\n    const inputstyle = { border: \"none\", borderBottom: \"3px solid #294936\", width: \"42%\", fontSize: \"30px\"};\n\n    return (\n      <div className=\"task-input\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"newtask\"\n            placeholder=\"enter task and click enter\"\n            value={this.state.value}\n            onChange={this.handleInput}\n            style={inputstyle}\n          ></input>\n        </form>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport Task from \"./components/task.js\";\nimport TaskInput from \"./components/taskinput.js\";\n\nfunction App() {\n  const [tasks, setTasks] = React.useState([]); // this manages what todos we have\n\n  function addTask(task) {\n    // adds a new task to our set of tasks\n    setTasks([...tasks, { task }]);\n  }\n\n  function removeTask(id) {\n    // removes task with index id from our set of classes\n    const newtasks = [...tasks];\n    newtasks.splice(id, 1);\n    setTasks(newtasks);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Daily To Do</h1>\n      </header>\n      <TaskInput handleSubmit={addTask} />\n      {tasks.map((task, index) => (\n        <Task\n          task={task.task}\n          id={index}\n          key={index}\n          handleDelete={removeTask}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}